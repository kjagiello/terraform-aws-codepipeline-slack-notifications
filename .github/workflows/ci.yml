name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  validate-terraform:
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:${{ matrix.terraform-version }}
      env:
        AWS_DEFAULT_REGION: eu-west-1
    strategy:
      fail-fast: false
      matrix:
        terraform-version: [ 0.12.30, 0.13.6, 0.14.10, 0.15.0, 1.1.9 ]
    steps:
      - uses: actions/checkout@v2
      - run: terraform fmt -check
      - run: terraform init
      - run: terraform validate

  lint-terraform:
    runs-on: ubuntu-latest
    env:
      TERRAFORM_VERSION: 0.15.0
      TFLINT_VERSION: 0.26.0
      TFSEC_VERSION: 0.39.21
      TERRAFORM_DOCS_VERSION: 0.12.1
    steps:
      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip

      - name: Install tflint
        run: |
          wget https://github.com/wata727/tflint/releases/download/v${TFLINT_VERSION}/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/
          rm tflint_linux_amd64.zip

      - name: Install tfsec
        run: |
          wget https://github.com/tfsec/tfsec/releases/download/v${TFSEC_VERSION}/tfsec-linux-amd64
          chmod +x tfsec-linux-amd64
          sudo mv tfsec-linux-amd64 /usr/local/bin/tfsec

      - name: Install terraform-docs
        run: |
          wget https://github.com/terraform-docs/terraform-docs/releases/download/v${TERRAFORM_DOCS_VERSION}/terraform-docs-v${TERRAFORM_DOCS_VERSION}-linux-amd64.tar.gz
          tar -xzf terraform-docs-v${TERRAFORM_DOCS_VERSION}-linux-amd64.tar.gz
          chmod +x terraform-docs
          sudo mv terraform-docs /usr/local/bin/
          rm terraform-docs-v${TERRAFORM_DOCS_VERSION}-linux-amd64.tar.gz

      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0
        env:
          SKIP: terraform_fmt,terraform_validate

  lint-python:
    runs-on: ubuntu-latest
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install --pre flake8==4.0.1 black==22.3.0

      - uses: actions/checkout@v2
      - run: flake8
      - run: black --check .

  test-python:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: eu-west-1
    strategy:
      fail-fast: false
      matrix:
        lambda:
          - notifier
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Keep boto version in sync with what is installed inside of the Python
      # 3.8 lambda. See the link below for reference.
      # https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
      - name: Install dependencies
        run: pip install boto3==1.20.32 botocore==1.23.32

      - uses: actions/checkout@v2
      - run: python -m tests
        working-directory: lambdas/${{ matrix.lambda }}
